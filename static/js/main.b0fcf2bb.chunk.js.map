{"version":3,"sources":["types/TodosFilter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","services/todos.ts","index.tsx"],"names":["TodosFilter","TodoItem","todo","selectedTodo","onSelectTodo","id","title","completed","isTodoSelected","className","cn","type","onClick","TodoList","todos","map","TodoFilter","query","filter","onQueryChange","onFilterChange","value","onChange","event","target","Object","values","placeholder","style","pointerEvents","All","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","loading","setLoading","useEffect","userId","catch","error","console","log","finally","href","email","name","App","setTodos","setQuery","setFilter","setSelectedTodo","filteredTodos","useMemo","preparedTodos","toLowerCase","includes","Active","Completed","Error","getPreparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0fcf2bb.chunk.js","sourcesContent":["export enum TodosFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  onSelectTodo,\n}) => {\n  const { id, title, completed } = todo;\n  const isTodoSelected = selectedTodo === todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isTodoSelected })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-success': completed,\n          'has-text-danger': !completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn(\n              'far',\n              {\n                'fa-eye': !isTodoSelected,\n                'fa-eye-slash': isTodoSelected,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          onSelectTodo={onSelectTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { TodosFilter } from '../../types/TodosFilter';\n\ntype Props = {\n  query: string;\n  filter: TodosFilter;\n  onQueryChange: (value: string) => void;\n  onFilterChange: (value: TodosFilter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  onQueryChange,\n  onFilterChange,\n}) => {\n  const handleReset = () => {\n    onQueryChange('');\n    onFilterChange(TodosFilter.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            className=\"is-capitalized\"\n            value={filter}\n            onChange={event => (\n              onFilterChange(event?.target.value as TodosFilter)\n            )}\n          >\n            {Object.values(TodosFilter).map(value => (\n              <option\n                value={value}\n                key={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear Search\"\n              onClick={handleReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onSelectTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser)\n        .catch(error => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"modal-close\"\n              onClick={() => onSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { TodosFilter } from './types/TodosFilter';\nimport { getTodos } from './api';\nimport { getPreparedTodos } from './services/todos';\n// import { getPreparedTodos } from './services/todos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(TodosFilter.All);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getPreparedTodos(todos, query, filter);\n  }, [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filter={filter}\n                onFilterChange={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectTodo={setSelectedTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectTodo={setSelectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { TodosFilter } from '../types/TodosFilter';\n\nexport const getPreparedTodos = (\n  todos: Todo[],\n  query: string,\n  filter: TodosFilter,\n) => {\n  let preparedTodos = [...todos];\n\n  if (query) {\n    preparedTodos = preparedTodos.filter(({ title }) => (\n      title.toLowerCase().includes(query.toLowerCase())\n    ));\n  }\n\n  if (filter !== TodosFilter.All) {\n    switch (filter) {\n      case TodosFilter.Active:\n        return preparedTodos.filter(({ completed }) => !completed);\n\n      case TodosFilter.Completed:\n        return preparedTodos.filter(({ completed }) => completed);\n\n      default:\n        throw new Error('Invalid data');\n    }\n  }\n\n  return preparedTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}